{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hadle\\\\OneDrive\\\\Desktop\\\\Kirsty's coding\\\\JavaScript\\\\poketrumps-react-app\\\\src\\\\components\\\\MainBlock.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport logo from '../assets/PokeTrumps logo.png';\nimport RedButton from './subComponents/RedButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainBlock = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  // Components to show in MainBlock on intro screen\n  const introMain = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Slate\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-header\",\n        children: \"Okay, let's battle some Pokemon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Components to show in MainBlock on rules screen\n  const rulesMain = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Slate\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-text\",\n        children: \"In this game you will be battling a mixture of cute and fearsome pokemon with an opponent in an attempt to win all 8 gym badges and become the best poke-trainer in the land. All you need to do is select the pokemon you want to play with. Then, the pokemon with the highest number in a randomly selected stat (ID, Height, or Weight) will win! Remember to take a close look at the pokemon your opponent is choosing between to give yourself the best chance of victory!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(RedButton, {\n          message: \"Okay, I'm ready to start\",\n          onClick: \"null\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Components to show in MainBlock on start screen\n  // const startMain = () => {\n  // return(\n\n  const [mainBlock, setMainBlock] = useState( /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Slate\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: logo,\n      className: \"App-logo\",\n      alt: \"logo\",\n      style: {\n        width: 525,\n        height: 150\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"App-text\",\n      children: \"are you ready to play?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App-footer\",\n      children: [/*#__PURE__*/_jsxDEV(RedButton, {\n        message: \"START\",\n        onClick: () => ClickButton(introMain())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RedButton, {\n        message: \"RULES\",\n        onClick: () => ClickButton(rulesMain())\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this));\n\n  //     )\n  // }\n\n  // useEffect(() => {\n  //     setMainBlock(startMain())\n  // }, [])\n\n  const ClickButton = action => {\n    _s();\n    useEffect(() => {\n      setMainBlock(action);\n      console.log(\"clicked\");\n    }, []);\n  };\n  _s(ClickButton, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n  return mainBlock;\n};\n_s2(MainBlock, \"2LFK0QbIsud06gs3zuQxViRC4SY=\");\n_c = MainBlock;\nexport default MainBlock;\nvar _c;\n$RefreshReg$(_c, \"MainBlock\");","map":{"version":3,"names":["React","useState","useEffect","logo","RedButton","jsxDEV","_jsxDEV","MainBlock","_s2","_s","$RefreshSig$","introMain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rulesMain","message","onClick","mainBlock","setMainBlock","src","alt","style","width","height","ClickButton","action","console","log","_c","$RefreshReg$"],"sources":["C:/Users/hadle/OneDrive/Desktop/Kirsty's coding/JavaScript/poketrumps-react-app/src/components/MainBlock.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../App.css'\r\nimport logo from '../assets/PokeTrumps logo.png'\r\nimport RedButton from './subComponents/RedButton'\r\n\r\n\r\nconst MainBlock = () => {\r\n\r\n   \r\n\r\n    // Components to show in MainBlock on intro screen\r\n    const introMain = () => {\r\n        return (\r\n            <div className='Slate'>\r\n            <p \r\n            className= \"App-header\">\r\n                Okay, let's battle some Pokemon!\r\n            </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // Components to show in MainBlock on rules screen\r\n    const rulesMain = () => {\r\n        return (\r\n            <div className='Slate'>\r\n            <p \r\n            className= \"App-text\">\r\n                In this game you will be battling a mixture of cute and fearsome\r\n                pokemon with an opponent in an attempt to win all 8 gym badges\r\n                and become the best poke-trainer in the land.\r\n                All you need to do is select the pokemon you want to play with.\r\n                Then, the pokemon with the highest number in a randomly selected \r\n                stat (ID, Height, or Weight) will win!\r\n                Remember to take a close look at the pokemon your opponent is\r\n                choosing between to give yourself the best chance of victory!\r\n            </p>\r\n            <div>\r\n                <RedButton message= \"Okay, I'm ready to start\" onClick= \"null\"/>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Components to show in MainBlock on start screen\r\n    // const startMain = () => {\r\n    // return(\r\n\r\n    const [mainBlock, setMainBlock] = useState(\r\n        <div className='Slate'>\r\n            <img \r\n                src= {logo} \r\n                className= \"App-logo\" \r\n                alt= \"logo\" \r\n                style= {{ width:525, height: 150 }} \r\n            />\r\n            <p \r\n            className= \"App-text\">\r\n                are you ready to play?\r\n            </p>\r\n            <div \r\n            className='App-footer'>\r\n                <RedButton message= \"START\" onClick= {() => ClickButton(introMain())}/>\r\n                <RedButton message= \"RULES\" onClick= {() => ClickButton(rulesMain())}/>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n    //     )\r\n    // }\r\n\r\n\r\n    // useEffect(() => {\r\n    //     setMainBlock(startMain())\r\n    // }, [])\r\n\r\n\r\n    const ClickButton = (action) => {\r\n        useEffect(() => {\r\n            setMainBlock(action)\r\n            console.log(\"clicked\")\r\n        }, [])\r\n    }\r\n    \r\n\r\n     \r\n    \r\n    return (mainBlock)\r\n    }\r\n\r\n\r\nexport default MainBlock"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}