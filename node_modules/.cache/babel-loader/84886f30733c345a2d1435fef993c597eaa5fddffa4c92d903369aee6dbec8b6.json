{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hadle\\\\OneDrive\\\\Desktop\\\\Kirsty's coding\\\\JavaScript\\\\poketrumps-react-app\\\\src\\\\components\\\\MainBlock.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../App.css';\nimport logo from '../assets/PokeTrumps logo.png';\nimport RedButton from './subComponents/RedButton';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainBlock = () => {\n  _s();\n  const [mainBlock, setMainBlock] = useState();\n  cons;\n\n  // Components to show in MainBlock on intro screen\n  const introMain = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Slate\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-header\",\n        children: \"Okay, let's battle some Pokemon!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Components to show in MainBlock on rules screen\n  const rulesMain = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Slate\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-text\",\n        children: \"In this game you will be battling a mixture of cute and fearsome pokemon with an opponent in an attempt to win all 8 gym badges and become the best poke-trainer in the land. All you need to do is select the pokemon you want to play with. Then, the pokemon with the highest number in a randomly selected stat (ID, Height, or Weight) will win! Remember to take a close look at the pokemon your opponent is choosing between to give yourself the best chance of victory!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(RedButton, {\n          message: \"Okay, I'm ready to start\",\n          onClick: \"null\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  };\n\n  // Components to show in MainBlock on start screen\n  const startMain = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Slate\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: logo,\n        className: \"App-logo\",\n        alt: \"logo\",\n        style: {\n          width: 525,\n          height: 150\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-text\",\n        children: \"are you ready to play?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-footer\",\n        children: [/*#__PURE__*/_jsxDEV(RedButton, {\n          message: \"START\",\n          onClick: (() => setMainBlock(introMain()), console.log(\"clicked\"))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(RedButton, {\n          message: \"RULES\",\n          onClick: () => setMainBlock(rulesMain())\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this);\n  };\n  useEffect(() => {\n    //Runs only on the first render\n    setMainBlock(startMain());\n  }, []);\n  return mainBlock;\n};\n_s(MainBlock, \"rHwQDgB2bwR54dr5kDV9vJE8Ehw=\");\n_c = MainBlock;\nexport default MainBlock;\nvar _c;\n$RefreshReg$(_c, \"MainBlock\");","map":{"version":3,"names":["React","useState","useEffect","logo","RedButton","jsxDEV","_jsxDEV","MainBlock","_s","mainBlock","setMainBlock","cons","introMain","className","children","fileName","_jsxFileName","lineNumber","columnNumber","rulesMain","message","onClick","startMain","src","alt","style","width","height","console","log","_c","$RefreshReg$"],"sources":["C:/Users/hadle/OneDrive/Desktop/Kirsty's coding/JavaScript/poketrumps-react-app/src/components/MainBlock.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../App.css'\r\nimport logo from '../assets/PokeTrumps logo.png'\r\nimport RedButton from './subComponents/RedButton'\r\n\r\n\r\nconst MainBlock = () => {\r\n\r\n    const [mainBlock, setMainBlock] = useState()\r\n    cons\r\n\r\n    // Components to show in MainBlock on intro screen\r\n    const introMain = () => {\r\n        return (\r\n            <div className='Slate'>\r\n            <p \r\n            className= \"App-header\">\r\n                Okay, let's battle some Pokemon!\r\n            </p>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Components to show in MainBlock on rules screen\r\n    const rulesMain = () => {\r\n        return (\r\n            <div className='Slate'>\r\n            <p \r\n            className= \"App-text\">\r\n                In this game you will be battling a mixture of cute and fearsome\r\n                pokemon with an opponent in an attempt to win all 8 gym badges\r\n                and become the best poke-trainer in the land.\r\n                All you need to do is select the pokemon you want to play with.\r\n                Then, the pokemon with the highest number in a randomly selected \r\n                stat (ID, Height, or Weight) will win!\r\n                Remember to take a close look at the pokemon your opponent is\r\n                choosing between to give yourself the best chance of victory!\r\n            </p>\r\n            <div>\r\n                <RedButton message= \"Okay, I'm ready to start\" onClick= \"null\"/>\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    // Components to show in MainBlock on start screen\r\n    const startMain = () => {\r\n    return(\r\n        <div className='Slate'>\r\n            <img \r\n                src= {logo} \r\n                className= \"App-logo\" \r\n                alt= \"logo\" \r\n                style= {{ width:525, height: 150 }} \r\n            />\r\n            <p \r\n            className= \"App-text\">\r\n                are you ready to play?\r\n            </p>\r\n            <div \r\n            className='App-footer'>\r\n                <RedButton message= \"START\" onClick= {() => setMainBlock(introMain()), console.log(\"clicked\")}/>\r\n                <RedButton message= \"RULES\" onClick= {() => setMainBlock(rulesMain())}/>\r\n            </div>\r\n        </div>\r\n        )\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        //Runs only on the first render\r\n        setMainBlock(startMain())\r\n    }, []);     \r\n     \r\n    \r\n    return (mainBlock)\r\n    }\r\n\r\n\r\nexport default MainBlock"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}