{"ast":null,"code":"import _slicedToArray from\"C:/Users/hadle/OneDrive/Desktop/Kirsty's coding/JavaScript/poketrumps-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import'../App.css';import logo from'../assets/PokeTrumps logo.png';import RandomPokemon from'./RandomPokemon';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var MainBlock=function MainBlock(){// useState to update the mainBlock******************************************************\nvar _useState=useState(),_useState2=_slicedToArray(_useState,2),mainBlock=_useState2[0],setMainBlock=_useState2[1];// START OF: \n// functions to hold different views of the mainBlock starting from last seen in the game\n// -------------------------------------------------------------------------------------\n// Components to show in MainBlock on cards screen***********************************\nvar CardsMain=function CardsMain(){return/*#__PURE__*/_jsxs(\"div\",{className:\"Slate\",children:[/*#__PURE__*/_jsxs(\"header\",{className:\"Slate-header\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"App-text\",style:{marginRight:\"22vw\"},children:\"ROUND 1\"}),/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo-small\",alt:\"small logo\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"Slate-header\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"App-text\",children:\"You've been given...\"}),/*#__PURE__*/_jsx(\"p\",{className:\"App-text\",style:{marginLeft:\"20vw\"},children:\"You're opponent has...\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"Card-deck\",children:/*#__PURE__*/_jsx(RandomPokemon,{})})]});};// Components to show in MainBlock on intro screen***********************************\nvar IntroMain=function IntroMain(){// useEffect(() => {\n//     const timer = setTimeout(() => {\n//       setMainBlock(cardsMain)\n//     }, 2000);\n//     return () => clearTimeout(timer);\n// }, []);\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"Slate\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo-small\",alt:\"small logo\"}),/*#__PURE__*/_jsx(\"p\",{className:\"App-text\",children:\"Okay, let's battle some Pokemon!\"})]});};// Components to show in MainBlock on rules screen***********************************\nvar rulesMain=function rulesMain(){return/*#__PURE__*/_jsxs(\"div\",{className:\"Slate\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo-small\",alt:\"small logo\"}),/*#__PURE__*/_jsx(\"p\",{className:\"App-text\",children:\"In this game you will be battling a mixture of cute and fearsome pokemon with an opponent in an attempt to win all 8 gym badges and become the best poke-trainer in the land. All you need to do is select the pokemon you want to play with. Then, the pokemon with the highest number in a randomly selected stat (ID, Height, or Weight) will win! Remember to take a close look at the pokemon your opponent is choosing between to give yourself the best chance of victory!\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"Red-button\",onClick:function onClick(){return setMainBlock(CardsMain);},children:\"Okay, I'm ready to start\"})})]});};// Components to show in MainBlock on start screen***********************************\nvar startMain=function startMain(){return/*#__PURE__*/_jsxs(\"div\",{className:\"Slate\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"App-header\",children:\"Hello, welcome to\"}),/*#__PURE__*/_jsx(\"img\",{src:logo,className:\"App-logo\",alt:\"large rocking logo\"}),/*#__PURE__*/_jsx(\"p\",{className:\"App-text\",children:\"are you ready to play?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"App-footer\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"Red-button\",onClick:function onClick(){return setMainBlock(CardsMain);},children:\"START\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"Red-button\",onClick:function onClick(){return setMainBlock(rulesMain);},children:\"RULES\"})]})]});};// END OF: \n// functions to hold different views of the mainBlock------------------------------------\n// Now everything is defined, load the startMain function to mainBlock to show it********\nuseEffect(function(){setMainBlock(startMain);},[]);return mainBlock;};export default MainBlock;","map":{"version":3,"names":["React","useState","useEffect","logo","RandomPokemon","jsx","_jsx","jsxs","_jsxs","MainBlock","_useState","_useState2","_slicedToArray","mainBlock","setMainBlock","CardsMain","className","children","style","marginRight","src","alt","marginLeft","IntroMain","rulesMain","type","onClick","startMain"],"sources":["C:/Users/hadle/OneDrive/Desktop/Kirsty's coding/JavaScript/poketrumps-react-app/src/components/MainBlock.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport '../App.css'\r\nimport logo from '../assets/PokeTrumps logo.png'\r\nimport RandomPokemon from './RandomPokemon'\r\n\r\n\r\n\r\nconst MainBlock = () => {\r\n\r\n// useState to update the mainBlock******************************************************\r\n    const [mainBlock, setMainBlock] = useState()\r\n\r\n\r\n// START OF: \r\n// functions to hold different views of the mainBlock starting from last seen in the game\r\n// -------------------------------------------------------------------------------------\r\n\r\n    // Components to show in MainBlock on cards screen***********************************\r\n    const CardsMain = () => {\r\n\r\n        return (\r\n            <div className='Slate'>\r\n                <header className='Slate-header'>\r\n                    <p className='App-text' style={{ marginRight: \"22vw\" }}>ROUND 1</p>\r\n                    <img\r\n                        src={logo}\r\n                        className=\"App-logo-small\"\r\n                        alt=\"small logo\" />\r\n                </header>\r\n                <div className='Slate-header'>\r\n                    <p className='App-text'>\r\n                        You've been given...\r\n                    </p>\r\n                    <p className='App-text' style={{ marginLeft: \"20vw\" }}>\r\n                        You're opponent has...\r\n                    </p>\r\n                </div>\r\n                <div className='Card-deck'>\r\n                    {<RandomPokemon/>}\r\n                   \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n            \r\n                    \r\n\r\n    // Components to show in MainBlock on intro screen***********************************\r\n    const IntroMain = () => {\r\n\r\n        // useEffect(() => {\r\n        //     const timer = setTimeout(() => {\r\n        //       setMainBlock(cardsMain)\r\n        //     }, 2000);\r\n        //     return () => clearTimeout(timer);\r\n        // }, []);\r\n        \r\n        \r\n        return (\r\n            \r\n            <div className='Slate'>\r\n                <img \r\n                    src= {logo} \r\n                    className= \"App-logo-small\" \r\n                    alt= \"small logo\" \r\n                />\r\n                <p \r\n                className= \"App-text\">\r\n                    Okay, let's battle some Pokemon!\r\n                </p>\r\n            </div>\r\n            \r\n\r\n        )\r\n    }\r\n\r\n\r\n    // Components to show in MainBlock on rules screen***********************************\r\n    const rulesMain = () => {\r\n        return (\r\n            <div className='Slate'>\r\n                <img \r\n                    src= {logo} \r\n                    className= \"App-logo-small\" \r\n                    alt= \"small logo\" \r\n                />\r\n                <p \r\n                className= \"App-text\">\r\n                    In this game you will be battling a mixture of cute and fearsome\r\n                    pokemon with an opponent in an attempt to win all 8 gym badges\r\n                    and become the best poke-trainer in the land.\r\n                    All you need to do is select the pokemon you want to play with.\r\n                    Then, the pokemon with the highest number in a randomly selected \r\n                    stat (ID, Height, or Weight) will win!\r\n                    Remember to take a close look at the pokemon your opponent is\r\n                    choosing between to give yourself the best chance of victory!\r\n                </p>\r\n                <div>\r\n                    <button \r\n                        type= \"button\" \r\n                        className='Red-button' \r\n                        onClick= {() => setMainBlock(CardsMain)}>\r\n                            Okay, I'm ready to start\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    // Components to show in MainBlock on start screen***********************************\r\n    const startMain = () => {\r\n        return (\r\n            \r\n\r\n            <div className='Slate'>\r\n                <header className= \"App-header\">\r\n                    Hello, welcome to \r\n                </header>\r\n                <img \r\n                    src= {logo} \r\n                    className= \"App-logo\" \r\n                    alt= \"large rocking logo\" \r\n                />\r\n                <p \r\n                    className= \"App-text\">\r\n                        are you ready to play?\r\n                </p>\r\n                <div \r\n                    className='App-footer'>\r\n                        <button \r\n                            type= \"button\" \r\n                            className='Red-button' \r\n                            onClick= {() => setMainBlock(CardsMain)}>\r\n                                START\r\n                        </button>\r\n                        <button \r\n                            type= \"button\" \r\n                            className='Red-button' \r\n                            onClick= {() => setMainBlock(rulesMain)}>\r\n                                RULES\r\n                        </button>\r\n                    \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n// END OF: \r\n// functions to hold different views of the mainBlock------------------------------------\r\n    \r\n// Now everything is defined, load the startMain function to mainBlock to show it********\r\n    \r\n   \r\n    useEffect(() => {\r\n        setMainBlock(startMain)\r\n    }, [])\r\n    \r\n\r\n    return (mainBlock)\r\n}\r\n\r\n\r\nexport default MainBlock"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}