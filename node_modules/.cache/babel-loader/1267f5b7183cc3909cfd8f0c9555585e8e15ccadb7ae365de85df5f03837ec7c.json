{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hadle\\\\OneDrive\\\\Desktop\\\\Kirsty's coding\\\\JavaScript\\\\poketrumps-react-app\\\\src\\\\components\\\\RandomPokemonA.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RandomPokemonA = props => {\n  _s();\n  // define where the data wil go when set\n  const [pokemonAData, setPokemonAData] = useState({\n    image: null,\n    pokemonName: null,\n    id: null,\n    xp: null,\n    height: null,\n    weight: null,\n    dataState: false\n  });\n\n  // populate the data on render with useEffect bu picking a random number as an ID and fetching the pokemon from the API\n  useEffect(() => {\n    const randomNumber = Math.floor(Math.random() * 150);\n    const url = `https://pokeapi.co/api/v2/pokemon/${randomNumber}`;\n    fetch(url).then(response => response.json()).then(data => {\n      setPokemonAData({\n        image: data.sprites.other[\"official-artwork\"].front_default,\n        pokemonName: data.name,\n        id: data.id,\n        xp: data.base_experience,\n        height: data.height,\n        weight: data.weight,\n        dataState: true\n      });\n    });\n  }, []);\n\n  // export the pokemon data to local storage after converting it to string\n\n  // the last data to be set synchronously is dataState, if this isn't ready yet show a 'Loading...'\n  if (!pokemonAData.dataState) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\\\"App-text\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 16\n    }, this);\n  }\n\n  // log the pokemon in local storage for the \n  localStorage.clear();\n  localStorage.pokemonAData = JSON.stringify(pokemonAData.id);\n  console.log(localStorage);\n\n  // when all the data is set return the components \n  return (\n    /*#__PURE__*/\n    // console.log(pokemonData),\n    _jsxDEV(\"button\", {\n      type: \"button\",\n      className: \"pokemonCard\",\n      style: {\n        marginLeft: \"3vw\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pokemonAData.image,\n        className: \"pokemonImage\",\n        alt: \"pokemon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"pokemonCardText\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Name: \", pokemonAData.pokemonName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"ID: \", pokemonAData.id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"XP: \", pokemonAData.xp]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Height: \", pokemonAData.height]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Weight: \", pokemonAData.weight]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this)\n  );\n};\n_s(RandomPokemonA, \"BtZCM4hpPAYC3cCWqxrGxROk3RY=\");\n_c = RandomPokemonA;\nexport default RandomPokemonA;\nvar _c;\n$RefreshReg$(_c, \"RandomPokemonA\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","RandomPokemonA","props","_s","pokemonAData","setPokemonAData","image","pokemonName","id","xp","height","weight","dataState","randomNumber","Math","floor","random","url","fetch","then","response","json","data","sprites","other","front_default","name","base_experience","className","children","fileName","_jsxFileName","lineNumber","columnNumber","localStorage","clear","JSON","stringify","console","log","type","style","marginLeft","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/hadle/OneDrive/Desktop/Kirsty's coding/JavaScript/poketrumps-react-app/src/components/RandomPokemonA.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst RandomPokemonA = (props) => {\r\n\r\n    // define where the data wil go when set\r\n    const [pokemonAData, setPokemonAData] = useState({\r\n        image: null,\r\n        pokemonName: null,\r\n        id: null,\r\n        xp: null,\r\n        height: null,\r\n        weight: null,\r\n        dataState: false\r\n    })\r\n          \r\n    // populate the data on render with useEffect bu picking a random number as an ID and fetching the pokemon from the API\r\n    useEffect(() => {\r\n        const randomNumber = Math.floor(Math.random() * 150)\r\n        const url = `https://pokeapi.co/api/v2/pokemon/${randomNumber}`\r\n        fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setPokemonAData({\r\n                    image: (data.sprites.other[\"official-artwork\"].front_default),\r\n                    pokemonName: (data.name),\r\n                    id: (data.id),\r\n                    xp: (data.base_experience),\r\n                    height: (data.height),\r\n                    weight: (data.weight),\r\n                    dataState: (true)\r\n                })\r\n            })\r\n    }, [])\r\n\r\n    // export the pokemon data to local storage after converting it to string\r\n    \r\n\r\n\r\n    // the last data to be set synchronously is dataState, if this isn't ready yet show a 'Loading...'\r\n    if (!pokemonAData.dataState) {\r\n        return <div className='\"App-text'>Loading...</div>\r\n    }\r\n\r\n\r\n    // log the pokemon in local storage for the \r\n    localStorage.clear()\r\n    localStorage.pokemonAData = JSON.stringify(pokemonAData.id)\r\n    console.log(localStorage)\r\n  \r\n    \r\n\r\n    // when all the data is set return the components \r\n    return (\r\n        // console.log(pokemonData),\r\n        <button type= \"button\" className='pokemonCard' style= {{ marginLeft: \"3vw\" }}>\r\n            <img src={pokemonAData.image} className=\"pokemonImage\" alt='pokemon'></img>\r\n            <div className='pokemonCardText'>\r\n                <span >Name: {pokemonAData.pokemonName}</span>\r\n                <span >ID: {pokemonAData.id}</span>\r\n                <span >XP: {pokemonAData.xp}</span>\r\n                <span >Height: {pokemonAData.height}</span>\r\n                <span >Weight: {pokemonAData.weight}</span>\r\n            </div>\r\n        </button>         \r\n    ) \r\n\r\n\r\n}\r\n\r\nexport default RandomPokemonA"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}