{"ast":null,"code":"import _slicedToArray from\"C:/Users/hadle/OneDrive/Desktop/Kirsty's coding/JavaScript/poketrumps-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var RandomPokemonC=function RandomPokemonC(props){// define where the data wil go when set\nvar _useState=useState({image:null,pokemonName:null,id:null,xp:null,height:null,weight:null,dataState:false}),_useState2=_slicedToArray(_useState,2),pokemonCData=_useState2[0],setPokemonCData=_useState2[1];// populate the data on render with useEffect bu picking a random number as an ID and fetching the pokemon from the API\nuseEffect(function(){var randomNumber=Math.ceil(Math.random()*150);var url=\"https://pokeapi.co/api/v2/pokemon/\".concat(randomNumber);fetch(url).then(function(response){return response.json();}).then(function(data){setPokemonCData({image:data.sprites.other[\"official-artwork\"].front_default,pokemonName:data.name,id:data.id,xp:data.base_experience,height:data.height,weight:data.weight,dataState:true});});},[]);// the last data to be set synchronously is dataState, if this isn't ready yet show a 'Loading...'\nif(!pokemonCData.dataState){return/*#__PURE__*/_jsx(\"div\",{className:\"\\\"App-text\",children:\"Loading...\"});}// log the pokemon in local storage for the pokedex and for battle data\nlocalStorage.pokemonCData=JSON.stringify(pokemonCData);localStorage.pokedexC=pokemonCData.id;// when all the data is set return the components \nreturn/*#__PURE__*/ (// console.log(pokemonData),\n_jsxs(\"button\",{type:\"button\",className:\"pokemonCard\",style:{marginLeft:\"22vw\"},onClick:props.cardClick,children:[/*#__PURE__*/_jsx(\"img\",{src:pokemonCData.image,className:\"pokemonImage\",alt:\"pokemon\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"pokemonCardText\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"Name: \",pokemonCData.pokemonName]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"ID: \",pokemonCData.id]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"XP: \",pokemonCData.xp]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Height: \",pokemonCData.height]}),/*#__PURE__*/_jsxs(\"span\",{children:[\"Weight: \",pokemonCData.weight]})]})]}));};export default RandomPokemonC;","map":{"version":3,"names":["React","useState","useEffect","jsx","_jsx","jsxs","_jsxs","RandomPokemonC","props","_useState","image","pokemonName","id","xp","height","weight","dataState","_useState2","_slicedToArray","pokemonCData","setPokemonCData","randomNumber","Math","ceil","random","url","concat","fetch","then","response","json","data","sprites","other","front_default","name","base_experience","className","children","localStorage","JSON","stringify","pokedexC","type","style","marginLeft","onClick","cardClick","src","alt"],"sources":["C:/Users/hadle/OneDrive/Desktop/Kirsty's coding/JavaScript/poketrumps-react-app/src/components/RandomPokemonC.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react'\r\n\r\nconst RandomPokemonC = (props) => {\r\n\r\n // define where the data wil go when set\r\n const [pokemonCData, setPokemonCData] = useState({\r\n    image: null,\r\n    pokemonName: null,\r\n    id: null,\r\n    xp: null,\r\n    height: null,\r\n    weight: null,\r\n    dataState: false\r\n})\r\n      \r\n// populate the data on render with useEffect bu picking a random number as an ID and fetching the pokemon from the API\r\nuseEffect(() => {\r\n    const randomNumber = Math.ceil(Math.random() * 150)\r\n    const url = `https://pokeapi.co/api/v2/pokemon/${randomNumber}`\r\n    fetch(url)\r\n        .then(response => response.json())\r\n        .then(data => {\r\n            setPokemonCData({\r\n                image: (data.sprites.other[\"official-artwork\"].front_default),\r\n                pokemonName: (data.name),\r\n                id: (data.id),\r\n                xp: (data.base_experience),\r\n                height: (data.height),\r\n                weight: (data.weight),\r\n                dataState: (true)\r\n            })\r\n        })\r\n}, [])\r\n\r\n\r\n\r\n\r\n\r\n// the last data to be set synchronously is dataState, if this isn't ready yet show a 'Loading...'\r\nif (!pokemonCData.dataState) {\r\n    return <div className='\"App-text'>Loading...</div>\r\n}\r\n\r\n\r\n// log the pokemon in local storage for the pokedex and for battle data\r\nlocalStorage.pokemonCData = JSON.stringify(pokemonCData)\r\nlocalStorage.pokedexC = (pokemonCData.id)\r\n\r\n\r\n\r\n\r\n\r\n\r\n// when all the data is set return the components \r\nreturn (\r\n    // console.log(pokemonData),\r\n    <button type= \"button\" className='pokemonCard' style= {{ marginLeft: \"22vw\" }} onClick= {props.cardClick}>\r\n        <img src={pokemonCData.image} className=\"pokemonImage\" alt='pokemon'></img>\r\n        <div className='pokemonCardText'>\r\n            <span >Name: {pokemonCData.pokemonName}</span>\r\n            <span >ID: {pokemonCData.id}</span>\r\n            <span >XP: {pokemonCData.xp}</span>\r\n            <span >Height: {pokemonCData.height}</span>\r\n            <span >Weight: {pokemonCData.weight}</span>\r\n        </div>\r\n    </button>         \r\n) \r\n\r\n\r\n}\r\n\r\nexport default RandomPokemonC"],"mappings":"qKAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,QAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAElD,GAAM,CAAAC,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIC,KAAK,CAAK,CAEjC;AACA,IAAAC,SAAA,CAAwCR,QAAQ,CAAC,CAC9CS,KAAK,CAAE,IAAI,CACXC,WAAW,CAAE,IAAI,CACjBC,EAAE,CAAE,IAAI,CACRC,EAAE,CAAE,IAAI,CACRC,MAAM,CAAE,IAAI,CACZC,MAAM,CAAE,IAAI,CACZC,SAAS,CAAE,KACf,CAAC,CAAC,CAAAC,UAAA,CAAAC,cAAA,CAAAT,SAAA,IARMU,YAAY,CAAAF,UAAA,IAAEG,eAAe,CAAAH,UAAA,IAUrC;AACAf,SAAS,CAAC,UAAM,CACZ,GAAM,CAAAmB,YAAY,CAAGC,IAAI,CAACC,IAAI,CAACD,IAAI,CAACE,MAAM,EAAE,CAAG,GAAG,CAAC,CACnD,GAAM,CAAAC,GAAG,sCAAAC,MAAA,CAAwCL,YAAY,CAAE,CAC/DM,KAAK,CAACF,GAAG,CAAC,CACLG,IAAI,CAAC,SAAAC,QAAQ,QAAI,CAAAA,QAAQ,CAACC,IAAI,EAAE,GAAC,CACjCF,IAAI,CAAC,SAAAG,IAAI,CAAI,CACVX,eAAe,CAAC,CACZV,KAAK,CAAGqB,IAAI,CAACC,OAAO,CAACC,KAAK,CAAC,kBAAkB,CAAC,CAACC,aAAc,CAC7DvB,WAAW,CAAGoB,IAAI,CAACI,IAAK,CACxBvB,EAAE,CAAGmB,IAAI,CAACnB,EAAG,CACbC,EAAE,CAAGkB,IAAI,CAACK,eAAgB,CAC1BtB,MAAM,CAAGiB,IAAI,CAACjB,MAAO,CACrBC,MAAM,CAAGgB,IAAI,CAAChB,MAAO,CACrBC,SAAS,CAAG,IAChB,CAAC,CAAC,CACN,CAAC,CAAC,CACV,CAAC,CAAE,EAAE,CAAC,CAMN;AACA,GAAI,CAACG,YAAY,CAACH,SAAS,CAAE,CACzB,mBAAOZ,IAAA,QAAKiC,SAAS,CAAC,YAAW,CAAAC,QAAA,CAAC,YAAU,EAAM,CACtD,CAGA;AACAC,YAAY,CAACpB,YAAY,CAAGqB,IAAI,CAACC,SAAS,CAACtB,YAAY,CAAC,CACxDoB,YAAY,CAACG,QAAQ,CAAIvB,YAAY,CAACP,EAAG,CAOzC;AACA,oBACI;AACAN,KAAA,WAAQqC,IAAI,CAAE,QAAQ,CAACN,SAAS,CAAC,aAAa,CAACO,KAAK,CAAG,CAAEC,UAAU,CAAE,MAAO,CAAE,CAACC,OAAO,CAAGtC,KAAK,CAACuC,SAAU,CAAAT,QAAA,eACrGlC,IAAA,QAAK4C,GAAG,CAAE7B,YAAY,CAACT,KAAM,CAAC2B,SAAS,CAAC,cAAc,CAACY,GAAG,CAAC,SAAS,EAAO,cAC3E3C,KAAA,QAAK+B,SAAS,CAAC,iBAAiB,CAAAC,QAAA,eAC5BhC,KAAA,SAAAgC,QAAA,EAAO,QAAM,CAACnB,YAAY,CAACR,WAAW,GAAQ,cAC9CL,KAAA,SAAAgC,QAAA,EAAO,MAAI,CAACnB,YAAY,CAACP,EAAE,GAAQ,cACnCN,KAAA,SAAAgC,QAAA,EAAO,MAAI,CAACnB,YAAY,CAACN,EAAE,GAAQ,cACnCP,KAAA,SAAAgC,QAAA,EAAO,UAAQ,CAACnB,YAAY,CAACL,MAAM,GAAQ,cAC3CR,KAAA,SAAAgC,QAAA,EAAO,UAAQ,CAACnB,YAAY,CAACJ,MAAM,GAAQ,GACzC,GACD,EAIb,CAAC,CAED,cAAe,CAAAR,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}